/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/main.ts
var main_exports = {};
__export(main_exports, {
  default: () => Vimium
});
module.exports = __toCommonJS(main_exports);
var import_obsidian2 = require("obsidian");

// src/settings.ts
var import_obsidian = require("obsidian");

// src/constants.ts
var CLICKABLE_SELECTOR_LIST = [
  ".clickable",
  ".clickable-icon",
  ".is-clickable",
  ".mod-clickable",
  ".workspace-tab-header",
  ".empty-state-action",
  ".workspace-tab-header-inner-close-button",
  ".menu-item",
  ".workspace-drawer-vault-switcher",
  // Canvas
  ".canvas-control-item",
  ".canvas-card-menu-button",
  ".canvas-color-picker-item",
  // Elements
  "a",
  "button",
  "input[type='button']",
  "input[type='submit']",
  "input[type='reset']",
  "[role='button']",
  "[tabindex]"
];
var CLICKABLE_SELECTOR = CLICKABLE_SELECTOR_LIST.join(", ");

// src/settings.ts
var DEFAULT_SETTINGS = {
  clickableCssSelector: CLICKABLE_SELECTOR,
  markerSize: 12
};
var VimiumSettingTab = class extends import_obsidian.PluginSettingTab {
  constructor(app, plugin) {
    super(app, plugin);
    this.plugin = plugin;
  }
  display() {
    const { containerEl } = this;
    containerEl.empty();
    new import_obsidian.Setting(containerEl).setName("Marker font size").setDesc("The size of text in markers.").addText((text) => text.setValue(this.plugin.settings.markerSize.toString()).onChange(async (value) => {
      const num = parseInt(value);
      if (isNaN(num)) {
        this.plugin.settings.markerSize = DEFAULT_SETTINGS.markerSize;
      } else {
        this.plugin.settings.markerSize = num;
      }
      await this.plugin.saveSettings();
    }));
    new import_obsidian.Setting(containerEl).setName("Clickable CSS selector").setDesc("Used for selecting clickable HTML elements.").addTextArea((text) => text.setPlaceholder("CSS selector..").setValue(this.plugin.settings.clickableCssSelector).onChange(async (value) => {
      this.plugin.settings.clickableCssSelector = value;
      await this.plugin.saveSettings();
    }));
    new import_obsidian.ButtonComponent(containerEl).setButtonText("Reset").setTooltip("Reset settings").onClick(async () => {
      this.plugin.settings.clickableCssSelector = CLICKABLE_SELECTOR;
      await this.plugin.saveSettings();
      this.display();
    });
  }
};

// src/tlds.ts
var tlds = [
  "ac",
  "ad",
  "ae",
  "af",
  "ag",
  "ai",
  "al",
  "am",
  "an",
  "ao",
  "aq",
  "ar",
  "as",
  "at",
  "au",
  "aw",
  "ax",
  "az",
  "ba",
  "bb",
  "bd",
  "be",
  "bf",
  "bg",
  "bh",
  "bi",
  "bj",
  "bl",
  "bm",
  "bn",
  "bo",
  "bq",
  "br",
  "bs",
  "bt",
  "bv",
  "bw",
  "by",
  "bz",
  "ca",
  "cc",
  "cd",
  "cf",
  "cg",
  "ch",
  "ci",
  "ck",
  "cl",
  "cm",
  "cn",
  "co",
  "cr",
  "cu",
  "cv",
  "cw",
  "cx",
  "cy",
  "cz",
  "de",
  "dj",
  "dk",
  "dm",
  "do",
  "dz",
  "ec",
  "ee",
  "eg",
  "eh",
  "er",
  "es",
  "et",
  "eu",
  "fi",
  "fj",
  "fk",
  "fm",
  "fo",
  "fr",
  "ga",
  "gb",
  "gd",
  "ge",
  "gf",
  "gg",
  "gh",
  "gi",
  "gl",
  "gm",
  "gn",
  "gp",
  "gq",
  "gr",
  "gs",
  "gt",
  "gu",
  "gw",
  "gy",
  "hk",
  "hm",
  "hn",
  "hr",
  "ht",
  "hu",
  "id",
  "ie",
  "il",
  "im",
  "in",
  "io",
  "iq",
  "ir",
  "is",
  "it",
  "je",
  "jm",
  "jo",
  "jp",
  "ke",
  "kg",
  "kh",
  "ki",
  "km",
  "kn",
  "kp",
  "kr",
  "kw",
  "ky",
  "kz",
  "la",
  "lb",
  "lc",
  "li",
  "lk",
  "lr",
  "ls",
  "lt",
  "lu",
  "lv",
  "ly",
  "ma",
  "mc",
  "md",
  "me",
  "mf",
  "mg",
  "mh",
  "mk",
  "ml",
  "mm",
  "mn",
  "mo",
  "mp",
  "mq",
  "mr",
  "ms",
  "mt",
  "mu",
  "mv",
  "mw",
  "mx",
  "my",
  "mz",
  "na",
  "nc",
  "ne",
  "nf",
  "ng",
  "ni",
  "nl",
  "no",
  "np",
  "nr",
  "nu",
  "nz",
  "om",
  "pa",
  "pe",
  "pf",
  "pg",
  "ph",
  "pk",
  "pl",
  "pm",
  "pn",
  "pr",
  "ps",
  "pt",
  "pw",
  "py",
  "qa",
  "re",
  "ro",
  "rs",
  "ru",
  "rw",
  "sa",
  "sb",
  "sc",
  "sd",
  "se",
  "sg",
  "sh",
  "si",
  "sj",
  "sk",
  "sl",
  "sm",
  "sn",
  "so",
  "sr",
  "ss",
  "st",
  "su",
  "sv",
  "sx",
  "sy",
  "sz",
  "tc",
  "td",
  "tf",
  "tg",
  "th",
  "tj",
  "tk",
  "tl",
  "tm",
  "tn",
  "to",
  "tp",
  "tr",
  "tt",
  "tv",
  "tw",
  "tz",
  "ua",
  "ug",
  "uk",
  "um",
  "us",
  "uy",
  "uz",
  "va",
  "vc",
  "ve",
  "vg",
  "vi",
  "vn",
  "vu",
  "wf",
  "ws",
  "ye",
  "yt",
  "za",
  "zm",
  "zw",
  "aaa",
  "abb",
  "abc",
  "aco",
  "ads",
  "aeg",
  "afl",
  "aig",
  "anz",
  "aol",
  "app",
  "art",
  "aws",
  "axa",
  "bar",
  "bbc",
  "bbt",
  "bcg",
  "bcn",
  "bet",
  "bid",
  "bio",
  "biz",
  "bms",
  "bmw",
  "bnl",
  "bom",
  "boo",
  "bot",
  "box",
  "buy",
  "bzh",
  "cab",
  "cal",
  "cam",
  "car",
  "cat",
  "cba",
  "cbn",
  "cbs",
  "ceb",
  "ceo",
  "cfa",
  "cfd",
  "com",
  "cpa",
  "crs",
  "csc",
  "dad",
  "day",
  "dds",
  "dev",
  "dhl",
  "diy",
  "dnp",
  "dog",
  "dot",
  "dtv",
  "dvr",
  "eat",
  "eco",
  "edu",
  "esq",
  "eus",
  "fan",
  "fit",
  "fly",
  "foo",
  "fox",
  "frl",
  "ftr",
  "fun",
  "fyi",
  "gal",
  "gap",
  "gay",
  "gdn",
  "gea",
  "gle",
  "gmo",
  "gmx",
  "goo",
  "gop",
  "got",
  "gov",
  "hbo",
  "hiv",
  "hkt",
  "hot",
  "how",
  "htc",
  "ibm",
  "ice",
  "icu",
  "ifm",
  "inc",
  "ing",
  "ink",
  "int",
  "ist",
  "itv",
  "iwc",
  "jcb",
  "jcp",
  "jio",
  "jlc",
  "jll",
  "jmp",
  "jnj",
  "jot",
  "joy",
  "kfh",
  "kia",
  "kim",
  "kpn",
  "krd",
  "lat",
  "law",
  "lds",
  "llc",
  "llp",
  "lol",
  "lpl",
  "ltd",
  "man",
  "map",
  "mba",
  "mcd",
  "med",
  "men",
  "meo",
  "mil",
  "mit",
  "mlb",
  "mls",
  "mma",
  "moe",
  "moi",
  "mom",
  "mov",
  "msd",
  "mtn",
  "mtr",
  "nab",
  "nba",
  "nec",
  "net",
  "new",
  "nfl",
  "ngo",
  "nhk",
  "now",
  "nra",
  "nrw",
  "ntt",
  "nyc",
  "obi",
  "off",
  "one",
  "ong",
  "onl",
  "ooo",
  "org",
  "ott",
  "ovh",
  "pay",
  "pet",
  "phd",
  "pid",
  "pin",
  "pnc",
  "pro",
  "pru",
  "pub",
  "pwc",
  "qvc",
  "red",
  "ren",
  "ril",
  "rio",
  "rip",
  "run",
  "rwe",
  "sap",
  "sas",
  "sbi",
  "sbs",
  "sca",
  "scb",
  "ses",
  "sew",
  "sex",
  "sfr",
  "ski",
  "sky",
  "soy",
  "spa",
  "srl",
  "srt",
  "stc",
  "tab",
  "tax",
  "tci",
  "tdk",
  "tel",
  "thd",
  "tjx",
  "top",
  "trv",
  "tui",
  "tvs",
  "ubs",
  "uno",
  "uol",
  "ups",
  "vet",
  "vig",
  "vin",
  "vip",
  "wed",
  "win",
  "wme",
  "wow",
  "wtc",
  "wtf",
  "xin",
  "xxx",
  "xyz",
  "you",
  "yun",
  "zip",
  "aarp",
  "able",
  "adac",
  "aero",
  "aigo",
  "akdn",
  "ally",
  "amex",
  "arab",
  "army",
  "arpa",
  "arte",
  "asda",
  "asia",
  "audi",
  "auto",
  "baby",
  "band",
  "bank",
  "bbva",
  "beer",
  "best",
  "bike",
  "bing",
  "blog",
  "blue",
  "bofa",
  "bond",
  "book",
  "buzz",
  "cafe",
  "call",
  "camp",
  "care",
  "cars",
  "casa",
  "case",
  "cash",
  "cbre",
  "cern",
  "chat",
  "citi",
  "city",
  "club",
  "cool",
  "coop",
  "cyou",
  "data",
  "date",
  "dclk",
  "deal",
  "dell",
  "desi",
  "diet",
  "dish",
  "docs",
  "doha",
  "duck",
  "duns",
  "dvag",
  "erni",
  "fage",
  "fail",
  "fans",
  "farm",
  "fast",
  "fiat",
  "fido",
  "film",
  "fire",
  "fish",
  "flir",
  "food",
  "ford",
  "free",
  "fund",
  "game",
  "gbiz",
  "gent",
  "ggee",
  "gift",
  "gmbh",
  "gold",
  "golf",
  "goog",
  "guge",
  "guru",
  "hair",
  "haus",
  "hdfc",
  "help",
  "here",
  "hgtv",
  "host",
  "hsbc",
  "icbc",
  "ieee",
  "imdb",
  "immo",
  "info",
  "itau",
  "java",
  "jeep",
  "jobs",
  "jprs",
  "kddi",
  "kids",
  "kiwi",
  "kpmg",
  "kred",
  "land",
  "lego",
  "lgbt",
  "lidl",
  "life",
  "like",
  "limo",
  "link",
  "live",
  "loan",
  "loft",
  "love",
  "ltda",
  "luxe",
  "maif",
  "meet",
  "meme",
  "menu",
  "mini",
  "mint",
  "mobi",
  "moda",
  "moto",
  "mtpc",
  "name",
  "navy",
  "news",
  "next",
  "nico",
  "nike",
  "ollo",
  "open",
  "page",
  "pars",
  "pccw",
  "pics",
  "ping",
  "pink",
  "play",
  "plus",
  "pohl",
  "porn",
  "post",
  "prod",
  "prof",
  "qpon",
  "raid",
  "read",
  "reit",
  "rent",
  "rest",
  "rich",
  "rmit",
  "room",
  "rsvp",
  "ruhr",
  "safe",
  "sale",
  "sapo",
  "sarl",
  "save",
  "saxo",
  "scor",
  "scot",
  "seat",
  "seek",
  "sexy",
  "shaw",
  "shia",
  "shop",
  "show",
  "silk",
  "sina",
  "site",
  "skin",
  "sncf",
  "sohu",
  "song",
  "sony",
  "spot",
  "star",
  "surf",
  "talk",
  "taxi",
  "team",
  "tech",
  "teva",
  "tiaa",
  "tips",
  "town",
  "toys",
  "tube",
  "vana",
  "visa",
  "viva",
  "vivo",
  "vote",
  "voto",
  "wang",
  "weir",
  "wien",
  "wiki",
  "wine",
  "work",
  "xbox",
  "yoga",
  "zara",
  "zero",
  "zone",
  "actor",
  "adult",
  "aetna",
  "amfam",
  "amica",
  "apple",
  "archi",
  "audio",
  "autos",
  "azure",
  "baidu",
  "beats",
  "bible",
  "bingo",
  "black",
  "boats",
  "boots",
  "bosch",
  "build",
  "canon",
  "cards",
  "chase",
  "cheap",
  "chloe",
  "cisco",
  "citic",
  "click",
  "cloud",
  "coach",
  "codes",
  "crown",
  "cymru",
  "dabur",
  "dance",
  "deals",
  "delta",
  "dodge",
  "drive",
  "dubai",
  "earth",
  "edeka",
  "email",
  "epost",
  "epson"
];
var tlds_default = tlds;

// src/utils.ts
function createMarkerText(text, markerEl, input = "") {
  Array.from(text).forEach((char, index) => {
    const charEl = createSpan();
    charEl.setText(char.toUpperCase());
    if (input.length >= index && char === input[index]) {
      charEl.addClass("vimium-marker-char-match");
    }
    markerEl.appendChild(charEl);
  });
}
function updateMarkerText(marker, input = "") {
  while (marker.el.firstChild) {
    marker.el.removeChild(marker.el.firstChild);
  }
  createMarkerText(marker.text, marker.el, input);
}
function createMarkerEl(text, input, x, y) {
  const markerEl = createSpan();
  markerEl.addClass("vimium-marker");
  markerEl.setCssProps({
    "--top": `${y}px`,
    "--left": `${x}px`
  });
  createMarkerText(text, markerEl, input);
  return markerEl;
}
function createMarker(text, parentEl, input = "") {
  const rect = parentEl.getBoundingClientRect();
  if (rect.width === 0 || rect.height === 0) {
    return null;
  }
  const data = {
    el: createMarkerEl(text, input, rect.left, rect.top),
    parentEl,
    text
  };
  return data;
}
function findMarkerMatch(text, markers) {
  for (const marker of markers) {
    if (text === marker.text) {
      return marker;
    }
  }
  return null;
}

// src/main.ts
var Vimium = class extends import_obsidian2.Plugin {
  constructor() {
    super(...arguments);
    this.showMarkers = false;
    this.markers = [];
    this.input = "";
  }
  async onload() {
    await this.loadSettings();
    this.addCommand({
      id: "show-markers",
      name: "Show markers",
      callback: () => {
        if (this.showMarkers) {
          this.destroyMarkers();
          this.input = "";
        }
        this.showMarkers = true;
        this.createMarkers();
      }
    });
    this.registerDomEvent(document, "keydown", (event) => {
      if (!this.showMarkers) {
        return;
      }
      if (event.key === "Escape") {
        this.showMarkers = false;
        this.input = "";
        this.destroyMarkers();
      } else if (event.key === "Backspace") {
        if (this.input === "") {
          return;
        }
        this.input = this.input.slice(0, -1);
        this.updateMarkers();
      } else if (event.key.length === 1 && event.key.match(/[a-zA-Z]/)) {
        this.input += event.key.toLowerCase();
        const result = findMarkerMatch(this.input, this.markers);
        if (result) {
          const clickableEl = result.parentEl;
          if (clickableEl.getAttribute("contenteditable") === "true") {
            clickableEl.focus();
          } else {
            clickableEl.click();
          }
          this.showMarkers = false;
          this.destroyMarkers();
          this.input = "";
        } else {
          this.updateMarkers();
        }
      }
      event.preventDefault();
    });
    this.registerDomEvent(document, "mousedown", () => {
      if (!this.showMarkers) {
        return;
      }
      this.showMarkers = false;
      this.input = "";
      this.destroyMarkers();
    });
    this.registerEvent(this.app.workspace.on("resize", () => {
      if (this.showMarkers) {
        this.updateMarkers();
      }
    }));
    this.addSettingTab(new VimiumSettingTab(this.app, this));
  }
  createMarkers() {
    const clickableElements = document.querySelectorAll(this.settings.clickableCssSelector);
    this.containerEl = createDiv();
    this.containerEl.addClass("vimium-container");
    this.app.workspace.containerEl.appendChild(this.containerEl);
    const containerInnerEl = createDiv();
    containerInnerEl.addClass("vimium-container-inner");
    this.containerEl.appendChild(containerInnerEl);
    this.containerEl.setCssProps({
      "--marker-size": `${this.settings.markerSize}px`,
      "--marker-color": this.settings.markerColor,
      "--marker-background-color": this.settings.markerBackgroundColor,
      "--marker-opacity": `${this.settings.markerOpacity}`
    });
    for (let i = 0; i < Math.min(clickableElements.length, tlds_default.length); i++) {
      const clickableEl = clickableElements[i];
      const text = tlds_default[i];
      const marker = createMarker(text, clickableEl, this.input);
      if (marker) {
        this.markers.push(marker);
        containerInnerEl.appendChild(marker.el);
      }
    }
  }
  updateMarkers() {
    for (const marker of this.markers) {
      const rect = marker.parentEl.getBoundingClientRect();
      marker.el.setCssProps({
        "--top": `${rect.top}px`,
        "--left": `${rect.left}px`,
        display: marker.text.startsWith(this.input) ? "block" : "none"
      });
      updateMarkerText(marker, this.input);
    }
  }
  destroyMarkers() {
    var _a;
    (_a = this.containerEl.parentNode) == null ? void 0 : _a.removeChild(this.containerEl);
    this.markers = [];
  }
  async loadSettings() {
    this.settings = Object.assign({}, DEFAULT_SETTINGS, await this.loadData());
  }
  async saveSettings() {
    await this.saveData(this.settings);
  }
};
//# sourceMappingURL=data:application/json;base64,
